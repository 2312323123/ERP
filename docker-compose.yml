version: "3.8"

# Base docker-compose file for development
services:
  mongo:
    image: mongo
    restart: always
    networks:
      - backend
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"

  db-psql:
    image: postgres:latest
    restart: always
    networks:
      - backend
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_MULTIPLE_DATABASES: backup_test,backup_test_only_psql
      BACKUP_TEST_USER: ${BACKUP_TEST_USER}
      BACKUP_TEST_PASSWORD: ${BACKUP_TEST_PASSWORD}
      BACKUP_TEST_ONLY_PSQL_USER: ${BACKUP_TEST_ONLY_PSQL_USER}
      BACKUP_TEST_ONLY_PSQL_PASSWORD: ${BACKUP_TEST_ONLY_PSQL_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-multiple-databases.sh:/docker-entrypoint-initdb.d/init-multiple-databases.sh
    ports:
      - "5432:5432"

  backup_test:
    build:
      context: ./backup_test
      target: development # in Dockerfile
    networks:
      - backend
    environment:
      - BACKUP_TEST_USER=${BACKUP_TEST_USER}
      - BACKUP_TEST_PASSWORD=${BACKUP_TEST_PASSWORD}
      - POSTGRES_DB=backup_test
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - "3000:3000"
    depends_on:
      - db-psql
      - mongo

  backup_test_only_psql:
    build:
      context: ./backup_test_only_psql
      target: development # in Dockerfile
    networks:
      - backend
    environment:
      - BACKUP_TEST_ONLY_PSQL_USER=${BACKUP_TEST_ONLY_PSQL_USER}
      - BACKUP_TEST_ONLY_PSQL_PASSWORD=${BACKUP_TEST_ONLY_PSQL_PASSWORD}
      - POSTGRES_DB=backup_test_only_psql
    ports:
      - "3001:3000"
    depends_on:
      - db-psql

  # backup_service:
  #   build:
  #     context: ./backup_service
  #     dockerfile: Dockerfile
  #   networks:
  #     - backend
  #   environment:
  #     - DB_PSQL_SERVICE_NAME=${DB_PSQL_SERVICE_NAME}
  #     - POSTGRES_USER=${POSTGRES_USER}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #     - RSA_PUBLIC_KEY_FOR_JWT=${RSA_PUBLIC_KEY_FOR_JWT}
  #     - SURVEY_SERVICE_MONGO_USER=${SURVEY_SERVICE_MONGO_USER}
  #     - SURVEY_SERVICE_MONGO_PASSWORD=${SURVEY_SERVICE_MONGO_PASSWORD}
  #   volumes:
  #     - ./backups:/backups
  #   depends_on:
  #     - db-psql
  #     - mongo

networks:
  backend:

volumes:
  mongodb_data:
  postgres_data:
