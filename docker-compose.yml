services:
  react-app:
    build:
      context: ./ERP-frontend  # Specify the build context (directory where the Dockerfile is located)
      dockerfile: Dockerfile  # Specify the Dockerfile name (if it's named differently)
    ports:
      - "8080:8080"
    volumes:
      - ./ERP-frontend:/app
      - /app/node_modules
    stdin_open: true
    tty: true

  nest-backend:
    build:
      context: ./ERP-backend  # Point to the directory containing your Dockerfile
      dockerfile: Dockerfile  # Specify Dockerfile if it's named differently
    ports:
      - "3000:3000"  # Expose the NestJS application port
    volumes:
      - ./ERP-backend:/app  # Mount the current directory to /app in the container for hot reloading
      - /app/node_modules  # Avoid mounting node_modules from the host machine
    environment:
      - NODE_ENV=development  # Set the environment to development
    command: npm run start:dev  # Start the NestJS app with hot reloading
    stdin_open: true  # Keep stdin open
    tty: true  # Allocate a pseudo-TTY

# services:
  # backend:
  #   build:
  #     args:
  #     - NODE_ENV=development
  #     context: backend
  #     target: development
  #   command: npm run start-watch
  #   environment:
  #     - DATABASE_DB=example
  #     - DATABASE_USER=root
  #     - DATABASE_PASSWORD=/run/secrets/db-password
  #     - DATABASE_HOST=db
  #     - NODE_ENV=development
  #   ports:
  #     - 80:80
  #     - 9229:9229
  #     - 9230:9230
  #   secrets:
  #     - db-password
  #   volumes:
  #     - ./backend/src:/code/src:ro
  #     - ./backend/package.json:/code/package.json
  #     - ./backend/package-lock.json:/code/package-lock.json
  #     - back-notused:/opt/app/node_modules
  #   networks:
  #     - public
  #     - private
  #   depends_on:
  #     - db
  # db:
  #   # We use a mariadb image which supports both amd64 & arm64 architecture
  #   image: mariadb:10.6.4-focal
  #   # If you really want to use MySQL, uncomment the following line
  #   #image: mysql:8.0.27
  #   command: '--default-authentication-plugin=mysql_native_password'
  #   restart: always
  #   secrets:
  #     - db-password
  #   volumes:
  #     - db-data:/var/lib/mysql
  #   networks:
  #     - private
  #   environment:
  #     - MYSQL_DATABASE=example
  #     - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db-password
#   frontend:
#     build:
#       context: frontend
#       target: development
#     ports:
#       - 3000:3000
#     volumes:
#       - ./frontend/src:/code/src
#       - /code/node_modules
#     networks:
#       - public
#     # depends_on:
#     #   - backend
# networks:
#   public:
#   private:
# volumes:
#   back-notused:
#   db-data:
# secrets:
#   db-password:
#     file: db/password.txt

