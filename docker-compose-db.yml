# you have to create .env file next to this file with credentials for it to work
# also put microservices databases credentials here as well as in init-db/create_databases.sql
services:
  db-psql:
    image: postgres:latest
    environment:
      # POSTGRES_DB: main_db   # The default database
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ./db_postgres/init-db:/docker-entrypoint-initdb.d/  # Mount the custom script
      - ./db_postgres/db_data:/var/lib/postgresql/data

  pgadmin:
    build:
      context: .
      dockerfile: ./pgadmin/dockerfile_for_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL_PART_BEFORE_AT}@${PGADMIN_DEFAULT_EMAIL_PART_AFTER_AT}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      # DATABASE_HOST: db-psql
    ports:
       - "5050:80"
    # process to find this was pain
    entrypoint: >
      /bin/sh -c "
      mkdir -p /var/lib/pgadmin/storage/${PGADMIN_DEFAULT_EMAIL_PART_BEFORE_AT}_${PGADMIN_DEFAULT_EMAIL_PART_AFTER_AT}/;
      cp /tmp/mountpoint.pgpass /var/lib/pgadmin/storage/${PGADMIN_DEFAULT_EMAIL_PART_BEFORE_AT}_${PGADMIN_DEFAULT_EMAIL_PART_AFTER_AT}/.pgpass;
      chown pgadmin:root /var/lib/pgadmin/storage/${PGADMIN_DEFAULT_EMAIL_PART_BEFORE_AT}_${PGADMIN_DEFAULT_EMAIL_PART_AFTER_AT}/.pgpass;
      chmod 600 /var/lib/pgadmin/storage/${PGADMIN_DEFAULT_EMAIL_PART_BEFORE_AT}_${PGADMIN_DEFAULT_EMAIL_PART_AFTER_AT}/.pgpass;
      /entrypoint.sh
      "
    configs:
      - source: servers.json
        target: /pgadmin4/servers.json
      - source: pgpass
        target: /tmp/mountpoint.pgpass

configs:
  pgpass:
    content: db-psql:5432:*:super_user_hehe:dupa123_44inofai4fuae9gyg9yhu
  servers.json:
    content: |
      {
        "Servers": {
          "1": {
            "Name": "PostgreSQL",
            "Group": "Servers",
            "Host": "db-psql",
            "Port": 5432,
            "MaintenanceDB": "postgres",
            "Username": "super_user_hehe",
            "ConnectionParameters": {
              "sslmode": "prefer",
              "connect_timeout": "10",
              "passfile": "/.pgpass"
            }
          }
        }
      }
