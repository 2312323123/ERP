version: '3.8'

services:
  # Defines the mockoon-services container, which hosts mock APIs managed by Mockoon.
  mockoon-services:
    build:
      context: ./mockoon-container
    ports:
      - "3003:3003" # Exposes port 3003 on the host and forwards it to port 3003 in the container.
      - "3004:3004" # Exposes port 3004 on the host and forwards it to port 3004 in the container.
      - "3005:3005" # Exposes port 3005 on the host and forwards it to port 3005 in the container.
    networks:
      - dupa

  # Defines the nginx container, which acts as the API gateway.
  nginx:
    build:
      context: .
    networks:
      - api_gateway_network
    ports:
      - "80:80" # Exposes port 80 on the host and forwards it to port 80 in the container.

  erp-backend:
    build:
      context: ./ERP-backend  # Point to the directory containing your Dockerfile
      dockerfile: Dockerfile  # Specify Dockerfile if it's named differently
    ports:
      - "3000:3000"  # Expose the NestJS application port
    volumes:
      - ./ERP-backend:/app  # Mount the current directory to /app in the container for hot reloading
      - /app/node_modules  # Avoid mounting node_modules from the host machine
    networks:
      - dupa
    environment:
      - NODE_ENV=development  # Set the environment to development
    command: npm run start:dev  # Start the NestJS app with hot reloading
    stdin_open: true  # Keep stdin open
    tty: true  # Allocate a pseudo-TTY

networks:
  # Defines a custom network named api_gateway_network.
  api_gateway_network:
  dupa: